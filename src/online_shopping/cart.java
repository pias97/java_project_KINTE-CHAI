/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package online_shopping;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.runtime.ScriptingFunctions.readLine;

/**
 *
 * @author USer
 */
public class cart extends javax.swing.JFrame {

    /**
     * Creates new form cart
     */
    public cart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        main_menu2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cart_load = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        place_order = new javax.swing.JButton();

        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 288));

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/exit.png"))); // NOI18N
        jButton21.setToolTipText("Close");
        jButton21.setBorderPainted(false);
        jButton21.setContentAreaFilled(false);
        jButton21.setRequestFocusEnabled(false);
        jButton21.setVerifyInputWhenFocusTarget(false);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/minimize.png"))); // NOI18N
        jButton20.setToolTipText("Minimize");
        jButton20.setBorderPainted(false);
        jButton20.setContentAreaFilled(false);
        jButton20.setFocusPainted(false);
        jButton20.setRequestFocusEnabled(false);
        jButton20.setVerifyInputWhenFocusTarget(false);
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton20MouseClicked(evt);
            }
        });
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(92, 245, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Online Shopping");

        jLabel10.setFont(new java.awt.Font("Snap ITC", 3, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 255, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("RP.com");

        main_menu2.setFont(new java.awt.Font("Showcard Gothic", 2, 15)); // NOI18N
        main_menu2.setForeground(new java.awt.Color(0, 255, 255));
        main_menu2.setText("Main Menu");
        main_menu2.setToolTipText("Close");
        main_menu2.setBorderPainted(false);
        main_menu2.setContentAreaFilled(false);
        main_menu2.setRequestFocusEnabled(false);
        main_menu2.setVerifyInputWhenFocusTarget(false);
        main_menu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_menu2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(654, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(662, Short.MAX_VALUE)
                    .addComponent(main_menu2)
                    .addGap(20, 20, 20)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(39, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(2, 2, 2)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(36, Short.MAX_VALUE)
                    .addComponent(main_menu2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)))
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        cart_load.setFont(new java.awt.Font("Showcard Gothic", 2, 15)); // NOI18N
        cart_load.setForeground(new java.awt.Color(204, 255, 204));
        cart_load.setText("Load");
        cart_load.setToolTipText("Close");
        cart_load.setBorderPainted(false);
        cart_load.setContentAreaFilled(false);
        cart_load.setRequestFocusEnabled(false);
        cart_load.setVerifyInputWhenFocusTarget(false);
        cart_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cart_loadActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(204, 255, 204));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 102));
        jLabel1.setText("Total:");

        place_order.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        place_order.setForeground(new java.awt.Color(0, 255, 255));
        place_order.setText("Place Order");
        place_order.setToolTipText("Close");
        place_order.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        place_order.setBorderPainted(false);
        place_order.setContentAreaFilled(false);
        place_order.setRequestFocusEnabled(false);
        place_order.setVerifyInputWhenFocusTarget(false);
        place_order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                place_orderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cart_load, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(place_order, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cart_load, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(325, 325, 325)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(place_order, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(797, 545));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20MouseClicked
        this.setState(ICONIFIED);
    }//GEN-LAST:event_jButton20MouseClicked

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        this.setState(ICONIFIED);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void place_orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_place_orderActionPerformed
           address ad = new address();
           ad.setVisible(true);
           ad.pack();
           this.dispose();
    }//GEN-LAST:event_place_orderActionPerformed

    private void cart_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cart_loadActionPerformed
        BufferedWriter bw =null;
         try {
            bw = new BufferedWriter(new FileWriter("Bill.txt", true));
            
            //woman
             if(global.woman1>0)
             {
                 global.quantity++;
                 global.total+=global.woman1*750;
                 bw.write("Jewellery_Set "+ global.woman1+ " "+ (global.woman1*750));
                 bw.newLine();
                 bw.flush();
             }
             
             
             if(global.woman2>0)
             {
                 global.quantity++;
                 global.total+=global.woman2*900;
                 bw.write("Hair_Band "+ global.woman2+ " "+ (global.woman2*900));
                 bw.newLine();
                 bw.flush();
             }
             
             if(global.woman3>0)
             {
                 global.quantity++;
                 global.total+=global.woman3*1880;
                 bw.write("Casual_Bag "+ global.woman3+ " "+ (global.woman3*1880));
                 bw.newLine();
                 bw.flush();
             }
             
             if(global.woman4>0)
             {
                 global.quantity++;
                 global.total+=global.woman4*1750;
                 bw.write("Traditional_Batura "+ global.woman4+ " "+ (global.woman4*1750));
                 bw.newLine();
                 bw.flush();
             }
             if(global.woman5>0)
             {
                 global.quantity++;
                 global.total+=global.woman5*1300;
                 bw.write("Hair_Straightner "+ global.woman5+ " "+ (global.woman5*1300));
                 bw.newLine();
                 bw.flush();
             }
             
             
             //tv
             if(global.tv1>0)
             {
                 global.quantity++;
                 global.total+=global.tv1*28500;
                 bw.write("Sony_Bravia "+ global.tv1+ " "+ (global.tv1*28500));
                 bw.newLine();
                 bw.flush();
             }
             
             if(global.tv2>0)
             {
                 global.quantity++;
                 global.total+=global.tv2*80000;
                 bw.write("Samsung "+ global.tv2+ " "+ (global.tv2*80000));
                 bw.newLine();
                 bw.flush();
             }
             
            
             if(global.tv3>0)
             {
                 global.quantity++;
                 global.total+=global.tv3*50000;
                 bw.write("Walton "+ global.tv3+ " "+ (global.tv3*50000));
                 bw.newLine();
                 bw.flush();
             }
             
             if(global.tv4>0)
             {
                 global.quantity++;
                 global.total+=global.tv4*70000;
                 bw.write("LG "+ global.tv4+ " "+ (global.tv4*70000));
                 bw.newLine();
                 bw.flush();
             }
             
             
             //toy
             if(global.toy1>0)
             {
                 global.quantity++;
                 global.total+=global.toy1*750;
                 bw.write("Cash_Register "+ global.toy1+ " "+ (global.toy1*750));
                 bw.newLine();
                 bw.flush();
             }
             
             if(global.toy2>0)
             {
                 global.quantity++;
                 global.total+=global.toy2*900;
                 bw.write("Mini_Robot "+ global.toy2+ " "+ (global.toy2*900));
                 bw.newLine();
                 bw.flush();
             }
             if(global.toy3>0)
             {
                 global.quantity++;
                 global.total+=global.toy3*700;
                 bw.write("Push_Car "+ global.toy3+ " "+ (global.toy3*700));
                 bw.newLine();
                 bw.flush();
             }
             if(global.toy4>0)
             {
                 global.quantity++;
                 global.total+=global.toy4*1300;
                 bw.write("Kitchen_Set "+ global.toy4+ " "+ (global.toy4*1300));
                 bw.newLine();
                 bw.flush();
             }
             
             
             //sports
             if(global.sp1>0)
             {
                 global.quantity++;
                 global.total+=global.sp1*750;
                 bw.write("Hand_Gloves "+ global.sp1+ " "+ (global.sp1*750));
                 bw.newLine();
                 bw.flush();
             }
             if(global.sp2>0)
             {
                 global.quantity++;
                 global.total+=global.sp2*1500;
                 bw.write("UCL_Ball "+ global.sp2+ " "+ (global.sp2*1500));
                 bw.newLine();
                 bw.flush();
             }
             if(global.sp3>0)
             {
                 global.quantity++;
                 global.total+=global.sp3*880;
                 bw.write("FCB_Jersey "+ global.sp3+ " "+ (global.sp3*880));
                 bw.newLine();
                 bw.flush();
             }
             if(global.sp5>0)
             {
                 global.quantity++;
                 global.total+=global.sp5*13000;
                 bw.write("Football_Shoe "+ global.sp5+ " "+ (global.sp5*13000));
                 bw.newLine();
                 bw.flush();
             }
             if(global.sp4>0)
             {
                 global.quantity++;
                 global.total+=global.sp4*1100;
                 bw.write("Hand_Pumper "+ global.sp4+ " "+ (global.sp4*1100));
                 bw.newLine();
                 bw.flush();
             }
             
             //mobile
             if(global.mob1>0)
             {
                 global.quantity++;
                 global.total+=global.mob1*24000;
                 bw.write("Xiaomi_Note_7_Pro "+ global.mob1+ " "+ (global.mob1*24000));
                 bw.newLine();
                 bw.flush();
             }
             if(global.mob2>0)
             {
                 global.quantity++;
                 global.total+=global.mob2*90000;
                 bw.write("Pixel_3 "+ global.mob2+ " "+ (global.mob2*90000));
                 bw.newLine();
                 bw.flush();
             }
             if(global.mob3>0)
             {
                 global.quantity++;
                 global.total+=global.mob3*8800;
                 bw.write("Shymphony_G100 "+ global.mob3+ " "+ (global.mob3*8800));
                 bw.newLine();
                 bw.flush();
             }
             if(global.mob4>0)
             {
                 global.quantity++;
                 global.total+=global.mob4*23000;
                 bw.write("Huawei "+ global.mob4+ " "+ (global.mob4*23000));
                 bw.newLine();
                 bw.flush();
             }
             if(global.mob5>0)
             {
                 global.quantity++;
                 global.total+=global.mob5*13000;
                 bw.write("Xiaomi_Note_3 "+ global.mob5+ " "+ (global.mob5*13000));
                 bw.newLine();
                 bw.flush();
             }
             
             
             //men's
             if(global.men1>0)
             {
                 global.quantity++;
                 global.total+=global.men1*2400;
                 bw.write("Fomal_Belt "+ global.men1+ " "+ (global.men1*2400));
                 bw.newLine();
                 bw.flush();
             }
              if(global.men2>0)
             {
                 global.quantity++;
                 global.total+=global.men2*500;
                 bw.write("Black_Cap "+ global.men2+ " "+ (global.men2*500));
                 bw.newLine();
                 bw.flush();
             }
            if(global.men3>0)
             {
                 global.quantity++;
                 global.total+=global.men3*800;
                 bw.write("Brown_Wallet "+ global.men3+ " "+ (global.men3*800));
                 bw.newLine();
                 bw.flush();
             }
            if(global.men4>0)
             {
                 global.quantity++;
                 global.total+=global.men4*23000;
                 bw.write("MEGIR-2050 "+ global.men4+ " "+ (global.men4*23000));
                 bw.newLine();
                 bw.flush();
             }
            if(global.men5>0)
             {
                 global.quantity++;
                 global.total+=global.men5*1000;
                 bw.write("Club_Sunglass "+ global.men5+ " "+ (global.men5*1000));
                 bw.newLine();
                 bw.flush();
             }
             
            //laptop
            if(global.laptop1>0)
             {
                 global.quantity++;
                 global.total+=global.laptop1*154000;
                 bw.write("HP_OMEN_15t "+ global.laptop1+ " "+ (global.laptop1*154000));
                 bw.newLine();
                 bw.flush();
             }
            if(global.laptop2>0)
             {
                 global.quantity++;
                 global.total+=global.laptop2*75000;
                 bw.write("Acer_Nitro_5 "+ global.laptop2+ " "+ (global.laptop2*75000));
                 bw.newLine();
                 bw.flush();
             }
            if(global.laptop3>0)
             {
                 global.quantity++;
                 global.total+=global.laptop3*173000;
                 bw.write("HP_OMEN_17t "+ global.laptop3+ " "+ (global.laptop3*173000));
                 bw.newLine();
                 bw.flush();
             }
            if(global.laptop4>0)
             {
                 global.quantity++;
                 global.total+=global.laptop4*62500;
                 bw.write("HP_Pavilion_14Q "+ global.laptop4+ " "+ (global.laptop4*62500));
                 bw.newLine();
                 bw.flush();
             }
            if(global.laptop5>0)
             {
                 global.quantity++;
                 global.total+=global.laptop5*98000;
                 bw.write("ASUS_S530UA "+ global.laptop5+ " "+ (global.laptop5*98000));
                 bw.newLine();
                 bw.flush();
             }
            
            //headphone
            if(global.headphone1>0)
             {
                 global.quantity++;
                 global.total+=global.headphone1*3250;
                 bw.write("Headphone-1 "+ global.headphone1+ " "+ (global.headphone1*3250));
                 bw.newLine();
                 bw.flush();
             }
            if(global.headphone2>0)
             {
                 global.quantity++;
                 global.total+=global.headphone2*9999;
                 bw.write("Headphone-2 "+ global.headphone2+ " "+ (global.headphone2*9999));
                 bw.newLine();
                 bw.flush();
             }
            if(global.headphone3>0)
             {
                 global.quantity++;
                 global.total+=global.headphone3*5000;
                 bw.write("Headphone-3 "+ global.headphone3+ " "+ (global.headphone3*5000));
                 bw.newLine();
                 bw.flush();
             }
            if(global.headphone4>0)
             {
                 global.quantity++;
                 global.total+=global.headphone4*1600;
                 bw.write("Headphone-4 "+ global.headphone4+ " "+ (global.headphone4*1600));
                 bw.newLine();
                 bw.flush();
             }
            if(global.headphone5>0)
             {
                 global.quantity++;
                 global.total+=global.headphone5*6800;
                 bw.write("Headphone-5 "+ global.headphone5+ " "+ (global.headphone5*6800));
                 bw.newLine();
                 bw.flush();
             }
            
            //cosmetics
            
            if(global.cos1>0)
             {
                 global.quantity++;
                 global.total+=global.cos1*750;
                 bw.write("Beauty-mask-bowl "+ global.cos1+ " "+ (global.cos1*750));
                 bw.newLine();
                 bw.flush();
             }
            if(global.cos2>0)
             {
                 global.quantity++;
                 global.total+=global.cos2*900;
                 bw.write("Brush-Set "+ global.cos2+ " "+ (global.cos2*900));
                 bw.newLine();
                 bw.flush();
             }
            if(global.cos3>0)
             {
                 global.quantity++;
                 global.total+=global.cos3*1880;
                 bw.write("Organizer_Box "+ global.cos3+ " "+ (global.cos3*1880));
                 bw.newLine();
                 bw.flush();
             }
            if(global.cos4>0)
             {
                 global.quantity++;
                 global.total+=global.cos4*3550;
                 bw.write("Makeup_Box "+ global.cos4+ " "+ (global.cos4*3550));
                 bw.newLine();
                 bw.flush();
             }
            if(global.cos5>0)
             {
                 global.quantity++;
                 global.total+=global.cos5*600;
                 bw.write("Vanity_Mirror "+ global.cos5+ " "+ (global.cos5*600));
                 bw.newLine();
                 bw.flush();
             }
            
            //computer parts
            if(global.comp1>0)
             {
                 global.quantity++;
                 global.total+=global.comp1*550;
                 bw.write("Mouse "+ global.comp1+ " "+ (global.comp1*550));
                 bw.newLine();
                 bw.flush();
             }
            if(global.comp2>0)
             {
                 global.quantity++;
                 global.total+=global.comp2*1550;
                 bw.write("Gaming_Mouse "+ global.comp2+ " "+ (global.comp2*1550));
                 bw.newLine();
                 bw.flush();
             }
            if(global.comp3>0)
             {
                 global.quantity++;
                 global.total+=global.comp3*5000;
                 bw.write("HDD "+ global.comp3+ " "+ (global.comp3*5000));
                 bw.newLine();
                 bw.flush();
             }
            if(global.comp4>0)
             {
                 global.quantity++;
                 global.total+=global.comp4*1600;
                 bw.write("Pendrive-1 "+ global.comp4+ " "+ (global.comp4*1600));
                 bw.newLine();
                 bw.flush();
             }
            if(global.comp5>0)
             {
                 global.quantity++;
                 global.total+=global.comp5*1399;
                 bw.write("Pendrive-2"+ global.comp5+ " "+ (global.comp5*1399));
                 bw.newLine();
                 bw.flush();
             }
            
        } catch (IOException ex) {
           // Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         
           readBill();
           
           total.setText(global.total + "/-");
        
    }//GEN-LAST:event_cart_loadActionPerformed

    private void main_menu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_menu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_main_menu2ActionPerformed

    
       public void readBill()
    {
        BufferedReader br = null;
        String line = "";
        String [][] arr= new String[100][100];
        int row=0;
        int col=0;
        String []a;
        try {
            br = new BufferedReader(new FileReader("Bill.txt"));
            
            while ((line = br.readLine()) != null)
            {
                 String [] s= line.split(" ");
                 
                 arr[row][0]=s[0];
                 arr[row][1]=s[1];
                 arr[row][2]=s[2];
                 
                 row++;
                
            }
            
            
        } catch (Exception ex) {
            ex.printStackTrace();
            
        }
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        String [] cols = {"Product Name", "Quantity", "Amount"};
        
        model.setDataVector(arr,cols);
        
        
        
        
    }
       
        // method for inputting the array in Jtable
       public void ShowData()
    {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        String [] cols = {"Product Name", "Quantity", "Amount"};
        String [][] data = {
            {"mobile", "2", "24500"},
            {"game", "3", "5655"},
            {"asdas", "2", "555"},
            {"as", "22", "1010"}
        };
        
       model.setDataVector(data,cols);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cart_load;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton main_menu2;
    private javax.swing.JButton place_order;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
